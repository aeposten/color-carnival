{"ast":null,"code":"var _jsxFileName = \"/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/components/Color.js\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Color(_ref) {\n  let {\n    color,\n    winningColor\n  } = _ref;\n  let isWinner = winningColor;\n  function handleIsWinner() {\n    if (color === isWinner) {\n      console.log('I am winner');\n    } else {\n      console.log('not me');\n    }\n    console.log(color == isWinner);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleIsWinner,\n    children: [color.red, \" \", color.green, \" \", color.blue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n_c = Color;\nexport default Color;\nvar _c;\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"names":["useState","useEffect","Color","color","winningColor","isWinner","handleIsWinner","console","log","red","green","blue"],"sources":["/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/components/Color.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Color({color, winningColor}) {\n  let isWinner = winningColor;\n  function handleIsWinner() {\n    if (color === isWinner) {\n      console.log('I am winner')\n    } else {\n      console.log('not me')\n    }\n    console.log(color == isWinner)\n  }\n  return <div onClick={handleIsWinner}>{color.red} {color.green} {color.blue}</div>;\n}\n\nexport default Color;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,SAASC,KAAK,OAAwB;EAAA,IAAvB;IAACC,KAAK;IAAEC;EAAY,CAAC;EAClC,IAAIC,QAAQ,GAAGD,YAAY;EAC3B,SAASE,cAAc,GAAG;IACxB,IAAIH,KAAK,KAAKE,QAAQ,EAAE;MACtBE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;IACAD,OAAO,CAACC,GAAG,CAACL,KAAK,IAAIE,QAAQ,CAAC;EAChC;EACA,oBAAO;IAAK,OAAO,EAAEC,cAAe;IAAA,WAAEH,KAAK,CAACM,GAAG,OAAGN,KAAK,CAACO,KAAK,OAAGP,KAAK,CAACQ,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAO;AACnF;AAAC,KAXQT,KAAK;AAad,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}