{"ast":null,"code":"var _jsxFileName = \"/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/components/ColorList.js\";\nimport { useState, useEffect } from \"react\";\nimport Color from \"./Color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColorList(_ref) {\n  let {\n    gameColors,\n    winningColor\n  } = _ref;\n  function handleIsWinner() {\n    if (color.isWinner) {\n      console.log(\"I am winner\");\n    } else {\n      console.log(\"not me\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [gameColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Color, {\n        color: color,\n        winningColor: winningColor,\n        handleisWinner: handleIsWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Winner, {\n      winningColor: winningColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = ColorList;\nexport default ColorList;\nvar _c;\n$RefreshReg$(_c, \"ColorList\");","map":{"version":3,"names":["useState","useEffect","Color","ColorList","gameColors","winningColor","handleIsWinner","color","isWinner","console","log","map","index"],"sources":["/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/components/ColorList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Color from \"./Color\";\nfunction ColorList({ gameColors, winningColor}) {\n  function handleIsWinner() {\n    if (color.isWinner) {\n      console.log(\"I am winner\");\n    } else {\n      console.log(\"not me\");\n    }\n  }\n\n  return (\n    <div>\n      {gameColors.map((color, index) => (\n        <div key={index}>\n          <Color\n            color={color}\n            winningColor={winningColor}\n            handleisWinner={handleIsWinner}\n          />\n        </div>\n      ))}\n      <Winner winningColor={winningColor} />\n    </div>\n  );\n}\n\nexport default ColorList;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAAC;AAC5B,SAASC,SAAS,OAA8B;EAAA,IAA7B;IAAEC,UAAU;IAAEC;EAAY,CAAC;EAC5C,SAASC,cAAc,GAAG;IACxB,IAAIC,KAAK,CAACC,QAAQ,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;EACF;EAEA,oBACE;IAAA,WACGN,UAAU,CAACO,GAAG,CAAC,CAACJ,KAAK,EAAEK,KAAK,kBAC3B;MAAA,uBACE,QAAC,KAAK;QACJ,KAAK,EAAEL,KAAM;QACb,YAAY,EAAEF,YAAa;QAC3B,cAAc,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA;IAC/B,GALMM,KAAK;MAAA;MAAA;MAAA;IAAA,QAOhB,CAAC,eACF,QAAC,MAAM;MAAC,YAAY,EAAEP;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEV;AAAC,KAvBQF,SAAS;AAyBlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}