{"ast":null,"code":"var _jsxFileName = \"/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ColorList from \"./components/ColorList\";\nimport Winner from \"./components/Winner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Need state for Winning Color (RGB) , and 6 other colors\n  const NUMCOLORS = 6;\n  const [winningIndex, setWinningIndex] = useState(() => 0);\n  const [gameColors, setGameColors] = useState([]);\n  const [winningColor, setWinningColor] = useState({});\n  function getRandomRGB() {\n    return Math.floor(Math.random() * 256);\n  }\n  function getNewColor() {\n    let newColor = {\n      red: getRandomRGB(),\n      green: getRandomRGB(),\n      blue: getRandomRGB()\n    };\n    return newColor;\n  }\n  function startGame() {\n    const newColors = [];\n    let winner;\n    setWinningIndex(Math.floor(Math.random() * NUMCOLORS));\n    for (let i = 0; i < NUMCOLORS; i++) {\n      newColors.push(getNewColor());\n      if (i === winningIndex) {\n        winner = newColors[i];\n      }\n    }\n    setGameColors([...gameColors, ...newColors]);\n    setWinningColor({\n      ...winningColor,\n      ...winner\n    });\n    console.log(winner);\n  }\n  useEffect(() => {\n    startGame();\n  }, []);\n  console.log(winningColor);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ColorList, {\n      gameColors: gameColors,\n      winningColor: winningColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {\n      winningColor: winningColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OKwTLVQzymJHPfKfR0Ru0Ac0kXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ColorList","Winner","App","NUMCOLORS","winningIndex","setWinningIndex","gameColors","setGameColors","winningColor","setWinningColor","getRandomRGB","Math","floor","random","getNewColor","newColor","red","green","blue","startGame","newColors","winner","i","push","console","log"],"sources":["/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ColorList from \"./components/ColorList\";\nimport Winner from \"./components/Winner\";\n\nfunction App() {\n  //Need state for Winning Color (RGB) , and 6 other colors\n  const NUMCOLORS = 6;\n  const [winningIndex, setWinningIndex] = useState(() => 0);\n  const [gameColors, setGameColors] = useState([]);\n  const [winningColor, setWinningColor] = useState({});\n\n  function getRandomRGB() {\n    return Math.floor(Math.random() * 256);\n  }\n\n  function getNewColor() {\n    let newColor = {\n      red: getRandomRGB(),\n      green: getRandomRGB(),\n      blue: getRandomRGB(),\n      \n    };\n    return newColor;\n  }\n\n  function startGame() {\n    const newColors = [];\n    let winner;\n    setWinningIndex(Math.floor(Math.random() * NUMCOLORS));\n\n    for (let i = 0; i < NUMCOLORS; i++) {\n      newColors.push(getNewColor());\n      if (i === winningIndex) {\n        winner = newColors[i];\n      }\n    }\n    setGameColors([...gameColors, ...newColors]);\n    setWinningColor({...winningColor, ...winner})\n    console.log(winner);\n  }\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  console.log(winningColor);\n  return (\n    <div className=\"App\">\n      <ColorList gameColors={gameColors} winningColor={winningColor}/>\n      <Winner winningColor={winningColor}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC,CAAC;EACzD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,SAASY,YAAY,GAAG;IACtB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EACxC;EAEA,SAASC,WAAW,GAAG;IACrB,IAAIC,QAAQ,GAAG;MACbC,GAAG,EAAEN,YAAY,EAAE;MACnBO,KAAK,EAAEP,YAAY,EAAE;MACrBQ,IAAI,EAAER,YAAY;IAEpB,CAAC;IACD,OAAOK,QAAQ;EACjB;EAEA,SAASI,SAAS,GAAG;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAIC,MAAM;IACVhB,eAAe,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGV,SAAS,CAAC,CAAC;IAEtD,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,SAAS,EAAEmB,CAAC,EAAE,EAAE;MAClCF,SAAS,CAACG,IAAI,CAACT,WAAW,EAAE,CAAC;MAC7B,IAAIQ,CAAC,KAAKlB,YAAY,EAAE;QACtBiB,MAAM,GAAGD,SAAS,CAACE,CAAC,CAAC;MACvB;IACF;IACAf,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE,GAAGc,SAAS,CAAC,CAAC;IAC5CX,eAAe,CAAC;MAAC,GAAGD,YAAY;MAAE,GAAGa;IAAM,CAAC,CAAC;IAC7CG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACrB;EAEAtB,SAAS,CAAC,MAAM;IACdoB,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENK,OAAO,CAACC,GAAG,CAACjB,YAAY,CAAC;EACzB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,SAAS;MAAC,UAAU,EAAEF,UAAW;MAAC,YAAY,EAAEE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE,eAChE,QAAC,MAAM;MAAC,YAAY,EAAEA;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEV;AAAC,GAhDQN,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}