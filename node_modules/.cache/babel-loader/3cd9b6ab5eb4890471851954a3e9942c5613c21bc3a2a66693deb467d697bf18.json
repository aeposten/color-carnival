{"ast":null,"code":"var _jsxFileName = \"/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ColorList from \"./components/ColorList\";\nimport Winner from \"./components/Winner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Need state for Winning Color (RGB) , and 6 other colors\n  const NUMCOLORS = 6;\n  const [winningIndex, setWinningIndex] = useState(() => 0);\n  const [gameColors, setGameColors] = useState([]);\n  const [winningColor, setWinningColor] = {\n    red: 0,\n    green: 0,\n    blue: 0\n  };\n  function getRandomRGB() {\n    return Math.floor(Math.random() * 256);\n  }\n  function getNewColor() {\n    let newColor = {\n      red: getRandomRGB(),\n      green: getRandomRGB(),\n      blue: getRandomRGB()\n    };\n    return newColor;\n  }\n  function startGame() {\n    const newColors = [];\n    let winner;\n    setWinningIndex(Math.floor(Math.random() * NUMCOLORS));\n    for (let i = 0; i < NUMCOLORS; i++) {\n      newColors.push(getNewColor());\n      if (i === winningIndex) {\n        winner = newColors[i];\n      }\n    }\n    setGameColors([...gameColors, ...newColors]);\n    setWinningColor(winningColor => ({\n      ...winningColor,\n      ...winner\n    }));\n  }\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  // console.log(winningColor);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ColorList, {\n      gameColors: gameColors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"yNgFdgZD7EldINNIaXZPdUyOBsk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ColorList","Winner","App","NUMCOLORS","winningIndex","setWinningIndex","gameColors","setGameColors","winningColor","setWinningColor","red","green","blue","getRandomRGB","Math","floor","random","getNewColor","newColor","startGame","newColors","winner","i","push"],"sources":["/Users/amyposten/Desktop/Dev/color-carnival/kiwico-homework-amy-posten/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ColorList from \"./components/ColorList\";\nimport Winner from \"./components/Winner\";\n\nfunction App() {\n  //Need state for Winning Color (RGB) , and 6 other colors\n  const NUMCOLORS = 6;\n  const [winningIndex, setWinningIndex] = useState(()=> 0);\n  const [gameColors, setGameColors] = useState([]);\n  const [winningColor, setWinningColor] = ({\n    red: 0,\n    green: 0,\n    blue: 0\n  })\n\n  function getRandomRGB() {\n    return Math.floor(Math.random() * 256);\n  }\n  \n  function getNewColor() {\n    let newColor = {\n      red: getRandomRGB(),\n      green: getRandomRGB(),\n      blue: getRandomRGB(),\n    };\n    return newColor;\n  }\n\n  function startGame() {\n    const newColors = [];\n    let winner;\n    setWinningIndex(Math.floor(Math.random() * NUMCOLORS));\n\n    for (let i = 0; i < NUMCOLORS; i++) {\n      newColors.push(getNewColor());\n      if (i === winningIndex) {\n        winner = newColors[i]\n      }\n    }\n    setGameColors([...gameColors, ...newColors]);\n\n    setWinningColor(winningColor => ({...winningColor, ...winner}))\n  }\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  // console.log(winningColor);\n  return <div className=\"App\"><ColorList gameColors={gameColors} />\n  <Winner />\n  </div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAK,CAAC,CAAC;EACxD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAI;IACvCC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAE;EACR,CAAE;EAEF,SAASC,YAAY,GAAG;IACtB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;EACxC;EAEA,SAASC,WAAW,GAAG;IACrB,IAAIC,QAAQ,GAAG;MACbR,GAAG,EAAEG,YAAY,EAAE;MACnBF,KAAK,EAAEE,YAAY,EAAE;MACrBD,IAAI,EAAEC,YAAY;IACpB,CAAC;IACD,OAAOK,QAAQ;EACjB;EAEA,SAASC,SAAS,GAAG;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAIC,MAAM;IACVhB,eAAe,CAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGb,SAAS,CAAC,CAAC;IAEtD,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,SAAS,EAAEmB,CAAC,EAAE,EAAE;MAClCF,SAAS,CAACG,IAAI,CAACN,WAAW,EAAE,CAAC;MAC7B,IAAIK,CAAC,KAAKlB,YAAY,EAAE;QACtBiB,MAAM,GAAGD,SAAS,CAACE,CAAC,CAAC;MACvB;IACF;IACAf,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE,GAAGc,SAAS,CAAC,CAAC;IAE5CX,eAAe,CAACD,YAAY,KAAK;MAAC,GAAGA,YAAY;MAAE,GAAGa;IAAM,CAAC,CAAC,CAAC;EACjE;EAEAtB,SAAS,CAAC,MAAM;IACdoB,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBAAO;IAAK,SAAS,EAAC,KAAK;IAAA,wBAAC,QAAC,SAAS;MAAC,UAAU,EAAEb;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACjE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AACR;AAAC,GAhDQJ,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}